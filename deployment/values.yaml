global:
  disableStandardLabels: true

  replicaCount: 1

  keycloak_host_name: "keycloak-0.keycloak.{{ .Release.Namespace }}.svc.cluster.local:9092"
  account_host_name: "http://{{ .Release.Name }}-account-service.{{ .Release.Namespace }}.svc.cluster.local:8081"
  cash_host_name: "http://{{ .Release.Name }}-cash-service.{{ .Release.Namespace }}.svc.cluster.local:8085"
  exchange_host_name: "http://{{ .Release.Name }}-exchange-service.{{ .Release.Namespace }}.svc.cluster.local:8084"
  transfer_host_name: "http://{{ .Release.Name }}-transfer-service.{{ .Release.Namespace }}.svc.cluster.local:8087"
  notification_host: "http://{{ .Release.Name }}-notification-service.{{ .Release.Namespace }}.svc.cluster.local:8082"
  block_host_name: "http://{{ .Release.Name }}-block-service.{{ .Release.Namespace }}.svc.cluster.local:8086"
  db_host: "postgres-0.postgres.{{ .Release.Namespace }}.svc.cluster.local:5432"
  kafka_host: "kafka-0.kafka.{{ .Release.Namespace }}.svc.cluster.local:9093"
  ziplin_host: "http://{{ .Release.Name }}-zipkin.{{ .Release.Namespace }}.svc.cluster.local:9411"

kube-prometheus-stack:
  enabled: true
  prometheus:
    prometheusSpec:
      serviceMonitorSelector: {}
      podMonitorSelector: {}
  grafana:
    enabled: true
    adminPassword: "admin"
    service:
      type: ClusterIP
  prometheus-node-exporter:
    hostRootFsMount:
      enabled: false

logstash:
  enabled: true
  imageTag: 8.18.0
  esJavaOpts: "-Xmx1g -Xms1g"
  extraEnvs:
    - name: LOGSTASH_SETTING_XPACK_MONITORING_ENABLED
      value: "false"
  logstashConfig:
    logstash.yml: |
      xpack.monitoring.enabled: false
      xpack.monitoring.elasticsearch.hosts: ["https://elasticsearch:9200"]
      xpack.monitoring.elasticsearch.ssl.verification_mode: "none"
  logstashPipeline:
    monitoring.conf: |
      input {
        kafka {
          bootstrap_servers => "kafka-0.kafka.{{ .Release.Namespace }}.svc.cluster.local:9093"
          topics => ["input-logs"]
          group_id => "logs-group"
        }
      }
      filter {
        grok {
          match => { "message" => "%{TIME:time} %{LOGLEVEL:log-level}%{SPACE} \[%{DATA:app}/%{DATA:method}/%{DATA:line}/%{DATA:traceId}/%{DATA:spanId}\]: %{GREEDYDATA:msg}" }
        }
      }
      output {
        elasticsearch {
          hosts => ["https://elasticsearch:9200"]
          index => "logs-%{+dd.MM.YYYY}"
          retry_on_conflict => 3
          action => "create"
          ssl_enabled => true
          ssl_verification_mode => "none"
        }
      }

elasticsearch:
  enabled: true
  tls:
    enabled: false
  masterService: "elasticsearch"
  imageTag: 8.18.0
  replicas: 1
  minimumMasterNodes: 1
  esJavaOpts: "-Xmx1g -Xms1g"
  clusterHealthCheckParams: ""
  security:
    enabled: true
    elasticPassword: "elastic"
    createDefaultSecret: true
  esConfig:
    elasticsearch.yml: |
      xpack.security.http.ssl.enabled: false
      xpack.security.enabled: true

kibana:
  enabled: true
  replicaCount: 1
  elasticsearchHosts: "https://elasticsearch:9200"
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  service:
    type: NodePort
    nodePort: 32000
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: kibana.example.com
        paths:
          - path: /
            pathType: Prefix
  env:
    - name: ELASTICSEARCH_USERNAME
      value: "admin"
    - name: ELASTICSEARCH_PASSWORD
      value: "admin"

keycloak:
  enabled: true
front:
  enabled: true
postgres:
  enabled: true
account-service:
  enabled: true
exchange-service:
  enabled: true
exchange-generator:
  enabled: true
mailhog:
  enabled: true
notification-service:
  enabled: true
block-service:
  enabled: true
cash-service:
  enabled: true
transfer-service:
  enabled: true
kafka:
  enabled: true
kafka-ui:
  enabled: true
zipkin:
  enabled: true