global:
  disableStandardLabels: true

  replicaCount: 1

  keycloak_host_name: "keycloak-0.keycloak.{{ .Release.Namespace }}.svc.cluster.local:9092"
  account_host_name: "http://{{ .Release.Name }}-account-service.{{ .Release.Namespace }}.svc.cluster.local:8081"
  cash_host_name: "http://{{ .Release.Name }}-cash-service.{{ .Release.Namespace }}.svc.cluster.local:8085"
  exchange_host_name: "http://{{ .Release.Name }}-exchange-service.{{ .Release.Namespace }}.svc.cluster.local:8084"
  transfer_host_name: "http://{{ .Release.Name }}-transfer-service.{{ .Release.Namespace }}.svc.cluster.local:8087"
  notification_host: "http://{{ .Release.Name }}-notification-service.{{ .Release.Namespace }}.svc.cluster.local:8082"
  block_host_name: "http://{{ .Release.Name }}-block-service.{{ .Release.Namespace }}.svc.cluster.local:8086"
  db_host: "postgres-0.postgres.{{ .Release.Namespace }}.svc.cluster.local:5432"
  kafka_host: "kafka-0.kafka.{{ .Release.Namespace }}.svc.cluster.local:9093"
  ziplin_host: "http://{{ .Release.Name }}-zipkin.{{ .Release.Namespace }}.svc.cluster.local:9411"

kube-prometheus-stack:
  enabled: true
  prometheus:
    prometheusSpec:
      serviceMonitorSelector: {}
      podMonitorSelector: {}
  additionalPrometheusRulesMap:
    practicum-custom-rules:
      groups:
        - name: mybank_http_errors
          rules:
            - alert: HighHttp5xxErrorRate
              expr: >
                sum(rate(http_server_requests_seconds_count{status=~"5.."}[1m])) 
                / 
                sum(rate(http_server_requests_seconds_count[1m])) 
                > 0.1
              for: 1m
              labels:
                severity: warning
              annotations:
                summary: "Высокий процент 5xx ошибок"
                description: "Больше 10% запросов за минуту вернули 5xx"
        - name: user_login_failures
          rules:
            - alert: HighLoginFailureRate
              expr: |
                sum by (login) (increase(failure_login_total[1m])) > 5
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "Большое кол-во неудачных аутентификаций"
                description: "Пользователь {{ $labels.login }} совершил более 5 неудачных попыток аутентификации за 1 минуту"

        - name: user_blocker_transactions
          rules:
            - alert: HighBlockTransactionRate
              expr: |
                increase(blocked_transaction_total[1m]) > 0
              for: 0m
              labels:
                severity: warning
              annotations:
                summary: "Заблокирован подозрительный перевод"
                description: "Обнаружена подозрительная операция. Пользователь: {{ $labels.login }}"

        - name: user_notification_failures
          rules:
            - alert: HighNotificationSendFailureRate
              expr: |
                increase(notification_send_error_count_by_login_total[5m]) > 0
              for: 30s
              labels:
                severity: warning
              annotations:
                summary: "Ошибка отправки уведомления"
                description: "Невозможно отправить уведомление пользователю {{ $labels.login }}"

        - name: currency_rates
          rules:
            - alert: CurrencyRateNotUpdated
              expr: |
                rate_update_seconds > 300
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "Не обновлялся курс валют"
                description: "Курс валют не обновлялся последние 5 минут"

  grafana:
    enabled: true
    adminPassword: "admin"
    service:
      type: ClusterIP
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        spring-boot:
          gnetId: 10280
          revision: 1
          datasource: Prometheus
        jvm-overview:
          gnetId: 4701
          revision: 2
          datasource: Prometheus
  prometheus-node-exporter:
    hostRootFsMount:
      enabled: false

logstash:
  enabled: true
  imageTag: 8.18.0
  esJavaOpts: "-Xmx1g -Xms1g"
  extraEnvs:
    - name: LOGSTASH_SETTING_XPACK_MONITORING_ENABLED
      value: "false"
  logstashConfig:
    logstash.yml: |
      xpack.monitoring.enabled: false
      xpack.monitoring.elasticsearch.hosts: ["https://elasticsearch:9200"]
      xpack.monitoring.elasticsearch.ssl.verification_mode: "none"
  logstashPipeline:
    monitoring.conf: |
      input {
        kafka {
          bootstrap_servers => "kafka-0.kafka.{{ .Release.Namespace }}.svc.cluster.local:9093"
          topics => ["input-logs"]
          group_id => "logstash-group"
        }
      }
      filter {
        grok {
          match => { "message" => "%{TIME:time} %{LOGLEVEL:log-level}%{SPACE} \[%{DATA:app}/%{DATA:method}/%{DATA:line}/%{DATA:traceId}/%{DATA:spanId}\]: %{GREEDYDATA:msg}" }
        }
      }
      output {
        elasticsearch {
          hosts => ["https://elasticsearch:9200"]
          index => "logs-%{+dd.MM.YYYY}"
          retry_on_conflict => 3
          action => "create"
          user => "elastic"                  
          password => "elastic"
          ssl_enabled => true
          ssl_verification_mode => "none"
        }
      }
  livenessProbe: null
  readinessProbe: null

elasticsearch:
  enabled: true
  tls:
    enabled: false
  masterService: "elasticsearch"
  imageTag: 8.18.0
  replicas: 1
  minimumMasterNodes: 1
  esJavaOpts: "-Xmx1g -Xms1g"
  clusterHealthCheckParams: ""
  secret:
    password: "elastic"
  esConfig:
    elasticsearch.yml: |
      network.host: 0.0.0.0
      xpack.security.http.ssl.enabled: true
      xpack.security.enabled: true

kibana:
  enabled: false
  replicaCount: 1
  elasticsearchHosts: "https://elasticsearch:9200"
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  service:
    type: NodePort
    nodePort: 32000
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: kibana.example.com
        paths:
          - path: /
            pathType: Prefix

keycloak:
  enabled: true
front:
  enabled: true
postgres:
  enabled: true
account-service:
  enabled: true
exchange-service:
  enabled: true
exchange-generator:
  enabled: true
mailhog:
  enabled: true
notification-service:
  enabled: true
block-service:
  enabled: true
cash-service:
  enabled: true
transfer-service:
  enabled: true
kafka:
  enabled: true
kafka-ui:
  enabled: true
zipkin:
  enabled: true