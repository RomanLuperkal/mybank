server:
  port: ${CASH_SERVICE_PORT}

spring:
  application:
    name: cash-service

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false

  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}/${CASH_DB_NAME:cash}
    username: ${CASH_DB_USERNAME:postgres}
    password: ${CASH_DB_PASSWORD}

  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://${KEYCLOAK_HOST_NAME}/realms/master
        registration:
          cash-client:
            provider: keycloak
            client-id: ${CASH_CLIENT_ID}
            client-secret: ${CASH_SECRET}
            scope: profile
            authorization-grant-type: client_credentials
            clientAuthenticationMethod: client_secret_post

      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_HOST_NAME}/realms/master

management:
  server:
    port: ${ACTUATOR_ENDPOINT_PORT}
  endpoints:
    web:
      exposure:
        include: health,prometheus
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_HOST}/api/v2/spans
  tracing:
    sampling:
      probability: 1

logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}


account-service:
  host: ${ACCOUNT_SERVICE_HOST:http//localhost:8081}

block-service:
  host: ${BLOCK_SERVICE_HOST:http//localhost:8085}

notification-service:
  host: ${NOTIFICATION_SERVICE_HOST:http//localhost:8084}

kafka:
  bootstrapServers: ${BOOTSTRAP_SERVERS}