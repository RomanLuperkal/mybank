version: '3.8'

services:
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "${FRONT_SERVER_PORT}:${FRONT_SERVER_PORT}"
    environment:
      - FRONT_SERVER_PORT=${FRONT_SERVER_PORT}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - KEYCLOAK_HOST_NAME=${KEYCLOAK_HOST_NAME}
    entrypoint: >
      sh -c "
        until curl -f http://keycloak:9092/realms/master; do
          echo 'Waiting for Keycloak to start...';
          sleep 5;
        done &&
        exec java -jar front.jar
      "
    depends_on:
      config-server:
        condition: service_healthy

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_SERVER_PORT}:${GATEWAY_SERVER_PORT}"
    environment:
      - GATEWAY_SERVER_PORT=${GATEWAY_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
    depends_on:
      config-server:
        condition: service_healthy

  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    ports:
      - "${ACCOUNT_SERVICE_PORT}:${ACCOUNT_SERVICE_PORT}"
    environment:
      - ACCOUNT_DB_HOST=${ACCOUNT_DB_HOST}
      - ACCOUNT_DB_PORT=${ACCOUNT_DB_PORT}
      - ACCOUNT_DB_NAME=${ACCOUNT_DB_NAME}
      - ACCOUNT_DB_USERNAME=${ACCOUNT_DB_USERNAME}
      - ACCOUNT_DB_PASSWORD=${ACCOUNT_DB_PASSWORD}
      - ACCOUNT_SERVICE_PORT=${ACCOUNT_SERVICE_PORT}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - KEYCLOAK_HOST_NAME=${KEYCLOAK_HOST_NAME}
    entrypoint: >
      sh -c "
        until curl -f http://keycloak:9092/realms/master; do
          echo 'Waiting for Keycloak to start...';
          sleep 5;
        done &&
        exec java -jar account-service.jar
      "
    depends_on:
      config-server:
        condition: service_healthy
      account-db:
        condition: service_healthy

  account-db:
    image: postgres:15.1-alpine
    container_name: account-db
    environment:
      POSTGRES_DB: ${ACCOUNT_DB_NAME}
      POSTGRES_USER: ${ACCOUNT_DB_USERNAME}
      POSTGRES_PASSWORD: ${ACCOUNT_DB_PASSWORD}
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${ACCOUNT_DB_USERNAME}", "-d", "${ACCOUNT_DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:${NOTIFICATION_SERVICE_PORT}"
    environment:
      - NOTIFICATION_DB_HOST=${NOTIFICATION_DB_HOST}
      - NOTIFICATION_DB_PORT=${NOTIFICATION_DB_PORT}
      - NOTIFICATION_DB_NAME=${NOTIFICATION_DB_NAME}
      - NOTIFICATION_DB_USERNAME=${NOTIFICATION_DB_USERNAME}
      - NOTIFICATION_DB_PASSWORD=${NOTIFICATION_DB_PASSWORD}
      - NOTIFICATION_SERVICE_PORT=${NOTIFICATION_SERVICE_PORT}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - KEYCLOAK_HOST_NAME=${KEYCLOAK_HOST_NAME}
    entrypoint: >
      sh -c "
        until curl -f http://keycloak:9092/realms/master; do
          echo 'Waiting for Keycloak to start...';
          sleep 5;
        done &&
        exec java -jar notification-service.jar
      "
    depends_on:
      config-server:
        condition: service_healthy
      notification-db:
        condition: service_healthy

  notification-db:
    image: postgres:15.1-alpine
    container_name: notification-db
    environment:
      POSTGRES_DB: ${NOTIFICATION_DB_NAME}
      POSTGRES_USER: ${NOTIFICATION_DB_USERNAME}
      POSTGRES_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${NOTIFICATION_DB_USERNAME}", "-d", "${NOTIFICATION_DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "${CONFIG_SERVER_PORT}:${CONFIG_SERVER_PORT}"
    environment:
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 5

  exchange-generator:
    build:
      context: ./exchange-generator
      dockerfile: Dockerfile
    ports:
      - "${EXCHANGE_GENERATOR_SERVER_PORT}:${EXCHANGE_GENERATOR_SERVER_PORT}"
    environment:
      - EXCHANGE_GENERATOR_SERVER_PORT=${EXCHANGE_GENERATOR_SERVER_PORT}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - KEYCLOAK_HOST_NAME=${KEYCLOAK_HOST_NAME}
    entrypoint: >
      sh -c "
        until curl -f http://keycloak:9092/realms/master; do
          echo 'Waiting for Keycloak to start...';
          sleep 5;
        done &&
        exec java -jar exchange-generator.jar
      "
    depends_on:
      config-server:
        condition: service_healthy

  exchange-service:
    build:
      context: ./exchange-service
      dockerfile: Dockerfile
    ports:
      - "${EXCHANGE_SERVICE_PORT}:${EXCHANGE_SERVICE_PORT}"
    environment:
      - EXCHANGE_SERVICE_PORT=${EXCHANGE_SERVICE_PORT}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - KEYCLOAK_HOST_NAME=${KEYCLOAK_HOST_NAME}
    entrypoint: >
      sh -c "
        until curl -f http://keycloak:9092/realms/master; do
          echo 'Waiting for Keycloak to start...';
          sleep 5;
        done &&
        exec java -jar exchange-service.jar
      "
    depends_on:
      config-server:
        condition: service_healthy

  cash-service:
    build:
      context: ./cash-service
      dockerfile: Dockerfile
    ports:
      - "${CASH_SERVICE_PORT}:${CASH_SERVICE_PORT}"
    environment:
      - ACCOUNT_DB_HOST=${ACCOUNT_DB_HOST}
      - CASH_DB_HOST=${CASH_DB_HOST}
      - CASH_DB_NAME=${CASH_DB_NAME}
      - CASH_DB_USERNAME=${CASH_DB_USERNAME}
      - CASH_DB_PASSWORD=${CASH_DB_PASSWORD}
      - CASH_SERVICE_PORT=${CASH_SERVICE_PORT}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - KEYCLOAK_HOST_NAME=${KEYCLOAK_HOST_NAME}
    entrypoint: >
      sh -c "
        until curl -f http://keycloak:9092/realms/master; do
          echo 'Waiting for Keycloak to start...';
          sleep 5;
        done &&
        exec java -jar cash-service.jar
      "
    depends_on:
      config-server:
        condition: service_healthy
      cash-db:
        condition: service_healthy

  cash-db:
    image: postgres:15.1-alpine
    container_name: cash-db
    environment:
      POSTGRES_DB: ${CASH_DB_NAME}
      POSTGRES_USER: ${CASH_DB_USERNAME}
      POSTGRES_PASSWORD: ${CASH_DB_PASSWORD}
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${CASH_DB_USERNAME}", "-d", "${CASH_DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  transfer-service:
    build:
      context: ./transfer-service
      dockerfile: Dockerfile
    ports:
      - "${TRANSFER_SERVICE_PORT}:${TRANSFER_SERVICE_PORT}"
    environment:
      - TRANSFER_DB_HOST=${TRANSFER_DB_HOST}
      - TRANSFER_DB_PORT=${TRANSFER_DB_PORT}
      - TRANSFER_DB_NAME=${TRANSFER_DB_NAME}
      - TRANSFER_DB_USERNAME=${TRANSFER_DB_USERNAME}
      - TRANSFER_DB_PASSWORD=${TRANSFER_DB_PASSWORD}
      - CONFIG_SERVER_NAME=${CONFIG_SERVER_NAME}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONSUL_HOST_NAME=${CONSUL_HOST_NAME}
      - KEYCLOAK_HOST_NAME=${KEYCLOAK_HOST_NAME}
    entrypoint: >
      sh -c "
        until curl -f http://keycloak:9092/realms/master; do
          echo 'Waiting for Keycloak to start...';
          sleep 5;
        done &&
        exec java -jar transfer-service.jar
      "
    depends_on:
      config-server:
        condition: service_healthy
      transfer-db:
        condition: service_healthy

  transfer-db:
    image: postgres:15.1-alpine
    container_name: transfer-db
    environment:
      POSTGRES_DB: ${TRANSFER_DB_NAME}
      POSTGRES_USER: ${TRANSFER_DB_USERNAME}
      POSTGRES_PASSWORD: ${TRANSFER_DB_PASSWORD}
    ports:
      - "5436:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${TRANSFER_DB_USERNAME}", "-d", "${TRANSFER_DB_USERNAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10


  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    ports:
      - "9092:9092"
    environment:
      - KC_HTTP_PORT=9092
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    command: ["start-dev", "--import-realm"]

  consul:
    image: consul:1.1.0
    hostname: localhost
    ports:
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: agent -dev -client 0.0.0.0 -log-level=INFO
    #volumes:
    #  - ./consul/data:/consul/data
   # command:
    #  - "agent"
     # - "-server"
      #- "-ui"
      #- "-bind=0.0.0.0"   # ❗️Критически важно для доступа
      #- "-client=0.0.0.0"
      #- "-data-dir=/consul/data"
      #- "-bootstrap-expect=1"  # ❗️Критически важно для одиночного узла